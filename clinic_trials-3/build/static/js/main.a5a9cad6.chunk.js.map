{"version":3,"sources":["Helper/Api.js","components/Login/login.js","components/Login/forgotpassword.js","components/Header/header.js","components/DashBoard/Dashboard.js","components/Patient/SchedulePatient.js","components/Patient/PatientList.js","components/Patient/Patient.js","components/Footer/AppFooter.js","components/Staff/StaffList.js","components/Staff/Staff.js","components/Diseases/DiseaseList.js","components/Diseases/ManageDisease.js","components/Department/DepartmentList.js","components/Department/Department.js","components/Patient/viewHistoryDetails.js","components/Patient/viewhistory.js","components/Patient/ComplaintDetails.js","components/Patient/ComplaintDetailsResult.js","components/Patient/ManageComplaints.js","components/Laboratory/Testdetails.js","components/Laboratory/TestList.js","components/Report/ReportDetails.js","components/Report/ReportList.js","components/Report/ReportFilter.js","App.js","serviceWorker.js","index.js"],"names":["Api","Login","props","Title","username","useFormDetails","undefined","location","state","user","password","useState","formvalidation","setFormValidation","Inputfocus","useRef","useEffect","current","focus","document","title","className","style","border","borderRadius","trim","onSubmit","e","value","length","preventDefault","loginData","fetch","method","headers","body","JSON","stringify","then","response","json","success","includes","history","push","catch","err","console","log","type","ref","onChange","placeholder","to","initialInput","setValue","target","ForgotPassword","setUserName","setValidation","successMessage","setSuccessmessage","InputFocus","res","text","setTimeout","Header","role","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","visibility","pathname","DashBoard","can_access","SchedulePatient","bp","setBp","weight","setWeight","doctorid","setDoctorid","fontWeight","userdata","name","email","mobilenumber","width","marginLeft","key","doctorList","map","x","index","onClick","alert","patientData","patientid","datevisited","Date","getFullYear","parseInt","getMonth","toString","getDate","attendedto","doctorvisited","window","reload","_PatientList","Fragment","users","address","dateregistered","Delete","trigger","modal","closeOnDocumentClick","DoctorList","Patient","fullname","patientList","setPatientList","deleted","setIsDeleted","setIsSuccess","doctors","setDoctors","a","fetchPatients","fetchDoctors","float","patientModel","confirm","val","AppFooter","bottom","position","alignItems","StaffList","userlist","marginRight","alignSelf","datecreated","department","stafftype","specialty","Edit","Staff","specialtyid","stafftypeid","departmentid","roleid","staffid","departmentList","setDepartmentList","roleList","setRoleList","staffTypeList","setStaffTypeList","setSpecialtyList","userList","setUserList","fetchDepartment","fetchRole","fetchStaffType","fetchSpecialty","fetchUserList","ClearField","Cancel","readOnly","staffPostBody","obj","Diseases","currentPage","setCurrentPage","diseasePerPage","setDiseasePerPage","pageNumbers","handleClick","Number","i","Math","ceil","indexOfLastDisease","indexOfFirstDisease","currentDisease","slice","renderPageNumbers","number","display","listStyleType","ManageDisease","diseaseName","setDiseaseName","diseaseList","setDiseaseList","diseaseid","setDiseaseid","setSuccess","fetchDiseases","handleClear","diseaseData","handleSave","model","Search","DepartmentList","departmentName","setDepartmentName","setDepartmentId","departmentData","createdby","viewHistoryDetails","medicalDetails","complaints","istestrequired","testdetails","testresult","testupload","condition","prescription","ViewHistory","medicalhistory","setMedicalHistory","isDivOpen","setDivOpen","setMedicalDetails","userdetals","patient","message","overflowY","ComplaintDetails","testRequired","setTestRequired","complaint","setComplaint","testDetails","setTestDetails","setPrescription","actiontaken","Send","setDiseaseId","diseases","conditionid","ManageComplaints","complaintList","setComplaintList","conditionList","setConditionList","fetDiseases","fetchComplaintsToday","istesttaken","loggedinuser","TestDetails","testResult","setTestResult","testrecommendedby","uploadedby","testdobneby","datedone","medicalhistoryid","TestList","pendingTestList","setpendingTestList","fetchPendingTests","ReportDetails","ReportList","Report","handleDelete","ReportFilter","fromdate","todate","analysisList","setAnalysis","setDiseaList","filter","analysisValues","enddate","App","path","exact","component","ManageDepartment","ManageTests","ManageReports","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5a9cad6.chunk.js","sourcesContent":["export const Api=\"http://localhost:4000/api/\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Api } from '../../Helper/Api';\r\nexport default function Login(props) {\r\n\tconst username = useFormDetails(props.location.state === undefined ? '' : props.location.state.user);\r\n\tconst password = useFormDetails('');\r\n\tconst [ formvalidation, setFormValidation ] = useState('');\r\n\r\n\tconst Inputfocus = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tInputfocus.current.focus();\r\n\t}, []);\r\n\tuseDocumentTitle('Login');\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\tif (username.value.length < 1) {\r\n\t\t\tsetFormValidation('Username required');\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (password.value.length < 1) {\r\n\t\t\tsetFormValidation('Password required');\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tsetFormValidation('');\r\n\t\tvar loginData = {\r\n\t\t\tusername: username.value.trim(),\r\n\t\t\tpassword: password.value.trim()\r\n\t\t};\r\n\t\t//call Api to validate user\r\n\t\t\r\n\t\t\tfetch(Api + 'user/login', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(loginData)\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\tif (JSON.stringify(success).includes('Username or password incorrect'))\r\n\t\t\t\t\t\tsetFormValidation('Username or Password Incorrect');\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t// Navigate to DashBoard\r\n\t\t\t\t\t\treturn props.history.push('/DashBoard', { user: success });\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t});\r\n\t\t\r\n\t\te.preventDefault();\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-4 loginPageMarginBanner\">\r\n\t\t\t\t{/* <img src={clinicalimg} alt={'Landing Page'} style={{ width: '50%',height:'100%' }} /> */}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"col-lg-4 loginPageMarginTop\" style={{border:'10px solid darkgrey',borderRadius:'20px'}}>\r\n\t\t\t\t<h3>User Login</h3>\r\n\t\t\t\t<p className={formvalidation.trim() !== '' ? 'alert alert-danger LoginInputTextSize' : ''}>\r\n\t\t\t\t\t{formvalidation}\r\n\t\t\t\t</p>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<span className=\"logintextheader\">Username</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tref={Inputfocus}\r\n\t\t\t\t\t\tvalue={username.value}\r\n\t\t\t\t\t\tonChange={username.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Username\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"logintextheader\">Password</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={password.value}\r\n\t\t\t\t\t\tonChange={password.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\t\t\t\t\t\r\n\t\t\t\t\t<button className=\"btn btn-primary loginbutton\">Login</button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<span className=\"loginbutton\">\r\n\t\t\t\t\t\tForgot Password? Click <Link to=\"/ForgotPassword\">Here</Link>\r\n\t\t\t\t\t</span>&nbsp;\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-4 loginPageMarginBanner\">\r\n\t\t\t\t{/* <img src={clinicalimg} alt={'Landing Page'} style={{ width: '50%',height:'100%' }} /> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction useFormDetails(initialInput) {\r\n\tconst [ value, setValue ] = useState(initialInput);\r\n\r\n\tfunction handleChange(e) {\r\n\t\tsetValue(e.target.value);\r\n\t}\r\n\treturn {\r\n\t\tvalue,\r\n\t\tonChange: handleChange\r\n\t};\r\n}\r\n\r\nfunction useDocumentTitle(Title) {\r\n\tuseEffect(() => {\r\n\t\tdocument.title = Title;\r\n\t});\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Api } from '../../Helper/Api';\r\n\r\nexport default function ForgotPassword(props) {\r\n\tconst [ username, setUserName ] = useState('');\r\n\tconst [ formvalidation, setValidation ] = useState('');\r\n\tconst [ successMessage, setSuccessmessage ] = useState('');\r\n\tconst InputFocus= useRef(null);\r\n\tuseEffect(() => {\r\n\t\tdocument.title = 'Forgot Password';\r\n\t\tInputFocus.current.focus();\r\n\t});\r\n\tfunction handleUserNameChange(e) {\r\n\t\tsetValidation('');\r\n\t\tsetUserName(e.target.value);\r\n\t}\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\tif (username.length < 1) {\r\n\t\t\tsetValidation('Username or email required');\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetValidation('');\r\n\t\t//Post details to API to reset Password\r\n\t\t\r\n\t\tfetch(Api + 'user/resetpassword/'+username, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((res) => res.text())\r\n\t\t\t.then((success) => {\r\n\t\t\t\tif (success === 'OK') {\r\n\t\t\t\t\tsetSuccessmessage(\r\n\t\t\t\t\t\t'Password Reset Successfully!. Kindly use user1 to login ' +\r\n\t\t\t\t\t\t\t'and change your password there after.'\r\n\t\t\t\t\t);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\treturn props.history.push('/Login', { user: username });\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetValidation('Username not found');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tsetValidation('An error occured while trying to change the password');\r\n\t\t\t});\r\n\t\te.preventDefault();\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-md-4 loginPageMarginBanner\">\r\n\t\t\t\t{/* <img src={clinicalimg} alt={'Landing Page'} style={{ width: '50%' }} /> */}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"col-lg-4 loginPageMarginTop\" style={{border:'1px solid black',borderRadius:'20px'}}>\r\n\t\t\t\t<h3>Reset Password</h3>\r\n\t\t\t\t<p className={formvalidation.trim() !== '' ? 'alert alert-danger LoginInputTextSize' : ''}>\r\n\t\t\t\t\t{formvalidation}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className={successMessage.trim() !== '' ? 'alert alert-info LoginInputTextSize' : ''}>\r\n\t\t\t\t\t{successMessage}\r\n\t\t\t\t</p>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<span className=\"logintextheader\">Username</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\tonChange={handleUserNameChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Username\"\r\n\t\t\t\t\t\tref={InputFocus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button className=\"btn btn-primary loginbutton\">Reset Password</button>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"loginbutton\">\r\n\t\t\t\t\t\tClick <Link to=\"/Login\">Here</Link> To Login\r\n\t\t\t\t\t</span>&nbsp;<br />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md-4 loginPageMarginBanner\">\r\n\t\t\t\t{/* <img src={clinicalimg} alt={'Landing Page'} style={{ width: '50%',height:'100%' }} /> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport function Header(props) {\r\n\r\n\tif(props.role===undefined)\r\n\t{\r\n\t\treturn <Redirect to=\"/Login\"/>\r\n\t}\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t\t<div className=\"navbar-brand\">Clinical Management System</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\tdata-target=\"#navbarSupportedContent\"\r\n\t\t\t\taria-controls=\"navbarSupportedContent\"\r\n\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"navbar-toggler-icon\" />\r\n\t\t\t</button>\r\n\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"nav-item\"\r\n\t\t\t\t\t\tstyle={{ visibility: props.role.includes('All') ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to={{ pathname: '/ManagePatient', state: { props } }} className=\"nav-link\">\r\n\t\t\t\t\t\t\tManage patients\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"nav-item\"\r\n\t\t\t\t\t\tstyle={{ visibility: props.role.includes('All') ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to={{ pathname: '/managestaff', state: { props } }} className=\"nav-link\">\r\n\t\t\t\t\t\t\tManage Staff\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"nav-item\"\r\n\t\t\t\t\t\tstyle={{ visibility: props.role.includes('All') ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to={{ pathname: '/managedepartment', state: { props } }} className=\"nav-link\">\r\n\t\t\t\t\t\t\tManage Departments\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"nav-item\"\r\n\t\t\t\t\t\tstyle={{ visibility: props.role.includes('All') ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to={{ pathname: '/managedisease', state: { props } }} className=\"nav-link\">\r\n\t\t\t\t\t\t\tManage Diseases\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\r\n\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"nav-item\"\r\n\t\t\t\t\t\tstyle={{ visibility: props.role.includes('All') ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to={{ pathname: '/managecomplaints', state: { props } }} className=\"nav-link\">\r\n\t\t\t\t\t\t\t Complaints\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"nav-item\"\r\n\t\t\t\t\t\tstyle={{ visibility: props.role.includes('All') ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to={{ pathname: '/managetests', state: { props } }} className=\"nav-link\">\r\n\t\t\t\t\t\t\t Tests\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName=\"nav-item\"\r\n\t\t\t\t\t\tstyle={{ visibility: props.role.includes('All') ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to={{ pathname: '/managereports', state: { props } }} className=\"nav-link\">\r\n\t\t\t\t\t\t\tView Reports\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWelcome: {props.user.username}{' '}\r\n\t\t\t\t\t<Link to=\"/Login\" className=\"btn btn-success\">\r\n\t\t\t\t\t\tSign-Out\r\n\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from '../Header/header';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default function DashBoard(props) {\r\n\r\n\tif(props===undefined)\r\n\t{\r\n\t\treturn <Redirect to=\"/Login\"/>\r\n\t}\r\n\tconst {can_access}=props.location.state.user.role;\r\n\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header user={props.location.state.user} role={can_access}/>\r\n\t\t\t<br />\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React,{useState,useRef,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Api } from '../../Helper/Api';\r\nexport default function SchedulePatient(props)\r\n{\r\n    \r\n    const [bp,setBp]=useState(0);\r\n    const [weight,setWeight]=useState(0);\r\n    const Inputfocus=useRef(null);\r\n    const [doctorid,setDoctorid]=useState(0);\r\n    useEffect(()=>{\r\n        Inputfocus.current.focus();\r\n    },[])\r\n    const handleBpchange=(e)=>{\r\n        setBp(e.target.value);\r\n    }\r\n    const handleWeightChange=(e)=>{\r\n        setWeight(e.target.value);\r\n    }\r\n    const handleDoctorChange=e=>{\r\n        setDoctorid(e.target.value);\r\n    }\r\n\r\n    const SchedulePatient=e=>{\r\n       \r\n        if(bp===0)\r\n        {\r\n            return alert('Enter patient bp');\r\n        }\r\n        if(weight===0)\r\n        {\r\n            return alert('Enter patient weight');\r\n        }\r\n        if(doctorid<1)\r\n        {\r\n            return alert('Select a doctor for this patient');\r\n        }\r\n        var patientData={\r\n            patientid:props.userdata.id,\r\n            datevisited:new Date().getFullYear() +\r\n            '-' +\r\n            (parseInt(new Date().getMonth().toString()) + 1) +\r\n            '-' +\r\n            new Date().getDate(),\r\n            weight:weight,\r\n            bp:bp,\r\n            attendedto:\"FALSE\",\r\n            doctorvisited:doctorid\r\n        };\r\n        fetch(Api+\"medicalhistory/schedule\",{\r\n            method:'POST',\r\n            headers:{\r\n                'content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(patientData)\r\n        }).then(res=>res.text())\r\n        .then(success=>{\r\n            alert('Patient scheduled successfully!')\r\n          window.location.reload(true);\r\n        }).catch(err=>{\r\n            alert('An error occured while processing your request!.')\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3>Schedule Patient</h3>\r\n            <br/>\r\n            Name : <label style={{fontWeight:\"bold\"}}>{props.userdata.name}</label>\r\n            <br/>\r\n            Email Address : <label style={{fontWeight:\"bold\"}}>{props.userdata.email}</label>\r\n            <br/>\r\n            Mobile Number : <label style={{fontWeight:\"bold\"}}>{props.userdata.mobilenumber}</label>\r\n            <br/>\r\n            <span className=\"logintextheader\">Enter Blood Pressure</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tref={Inputfocus}\r\n\t\t\t\t\t\tvalue={bp}\r\n\t\t\t\t\t\tonChange={handleBpchange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t\tplaceholder=\"Enter BP\"\r\n\t\t\t\t\t/>\r\n            <span className=\"logintextheader\">Enter Weight</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvalue={weight}\r\n\t\t\t\t\t\tonChange={handleWeightChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Weight\"\r\n\t\t\t\t\t/>\r\n                    <br/>\r\n                    <span className=\"logintextheader\">Select Doctor</span>&nbsp;\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvalue={doctorid}\r\n\t\t\t\t\t\tonChange={handleDoctorChange}\r\n                        className=\"form-control \"\r\n                        style={{width:'50%',marginLeft:'20px'}}\r\n\t\t\t\t\t>\r\n                          <option value=\"\" key=\"0\">--Select--</option>\r\n                        {props.doctorList!==undefined && props.doctorList.length>0?\r\n                      \r\n                       props.doctorList.map((x,index)=>{\r\n                            return <option value={x.id} key={index}>{x.name}</option>\r\n                        }):0}\r\n                    </select>\r\n                    <br/>\r\n            <button className=\"btn btn-success\" onClick={()=>SchedulePatient()}>Schedule</button>        \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Popup from 'reactjs-popup';\r\nimport SchedulePatient from './SchedulePatient';\r\nexport default function _PatientList(props) {\r\n\t\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<center style={{ visibility: props._PatientList.length > 0 ? 'visible' : 'hidden', width: '100%' }}>\r\n\t\t\t\t{/* <div style={{ float: 'left', marginLeft: '30%' }}>\r\n\t\t\t\t\t<label>Search</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tstyle={{ width: '30%', marginRight: '32%', alignSelf: 'center' }}\r\n\t\t\t\t\tplaceholder=\"Enter Name or Mobile Number\"\r\n\t\t\t\t/>\r\n\t\t\t\t<br /> */}\r\n\t\t\t</center>\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{ visibility: props._PatientList.length > 0 ? 'visible' : 'hidden', width: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>full Name</th>\r\n\t\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t\t<th>Email Address</th>\r\n\t\t\t\t\t\t<th>Mobile Number</th>\r\n\t\t\t\t\t\t<th>Created Date</th>\r\n\t\t\t\t\t\t<th>Created By</th>\r\n\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props._PatientList !== undefined && props._PatientList.length > 0 ? (\r\n\t\t\t\t\t\tprops._PatientList.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key=\"0\">\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.name}>{users.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.address}>{users.address}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.email}>{users.email}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.mobilenumber}>{users.mobilenumber}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.dateregistered}>{users.dateregistered}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.user.username}>{users.user.username}</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"delete\">\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.Delete(this, users.id, index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t</button>|{' '}\r\n\t\t\t\t\t\t\t\t\t\t<Popup\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger={<button className=\"btn btn-primary\"> Schedule </button>}\r\n\t\t\t\t\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\t\t\t\t\tcloseOnDocumentClick\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<SchedulePatient userdata={users} doctorList={props.DoctorList} closeOnDocumentClick/>\r\n\t\t\t\t\t\t\t\t\t\t</Popup>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tprops._PatientList\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from '../Header/header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Api } from '../../Helper/Api';\r\nimport PatientList from './PatientList';\r\nimport {Redirect} from 'react-router-dom';\r\nexport default function Patient(props) {\r\n\t\r\n\tconst fullname = useFormDetails('');\r\n\tconst address = useFormDetails('');\r\n\tconst email = useFormDetails('');\r\n\tconst mobilenumber = useFormDetails('');\r\n\tconst [patientList,setPatientList]=useState([]);\r\n\tconst [deleted,setIsDeleted]=useState(false);\r\n\tconst [success,setIsSuccess]=useState('');\r\n\tconst [doctors,setDoctors]=useState([]);\r\n    useEffect(()=>{\r\n\t\tdocument.title=\"Manage Patients\"\r\n\t\t\r\n\t})\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst fetchPatients=async ()=>{\r\n\t\tawait fetch(Api+\"patient/getall\")\r\n\t\t\t.then(res=>res.json())\r\n\t\t\t.then(success=>{\r\n\t\t\t\tsetPatientList(success);\r\n\t\t\t}).catch(err=>{\r\n\r\n\t\t\t})\r\n\t\t};\r\n\t\tfetchPatients();\r\n\t},[deleted,success])\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst fetchDoctors=async()=>{\r\n\t\t\tawait fetch(Api+\"user/getAll\")\r\n\t\t\t.then(response=>response.json())\r\n\t\t\t.then(success=>{\r\n\t\t\t\tsetDoctors(success)\r\n\t\t\t}).catch(err=>{\r\n\r\n\t\t\t})\r\n\t\t};\r\n\t\tfetchDoctors();\r\n\t},[])\r\n\t\r\n\tfunction clearfields()\r\n\t{\r\n\t\tfullname.setValue(fullname,'');\r\n\t\temail.setValue(email,'');\r\n\t\tmobilenumber.setValue(mobilenumber,'');\r\n\t\taddress.setValue(address,'');\r\n\t}\r\n\t\r\n\tfunction Delete(e,index)\r\n\t{\r\n\t\tif(window.confirm('Are you sure you want to delete this patient?'))\r\n\t\tfetch(Api+\"patient/delete/\"+index,{\r\n\t\t\tmethod:'DELETE',\r\n\t\t\theaders:{\r\n\t\t\t\t'content-type':'application/json'\r\n\t\t\t}\r\n\t\t}).then(res=>res.text())\r\n\t\t.then(success=>{\r\n\t\t\tif(success){\r\n\t\t\t\talert('Patient deleted Successfully!')\r\n\t\t\t\tsetIsDeleted(true);\r\n\t\t\t}\r\n\t\t}).catch(err=>{\r\n\t\t\talert('An error occured while performing your request!')\r\n\t\t})\r\n\t\telse\r\n\t\treturn false;\r\n\t}\r\n\r\n    function Submit(e){\r\n        if(fullname.value==='')\r\n        {\r\n            return alert('Enter Patient Name');\r\n        }\r\n        if(email.value==='')\r\n        {\r\n            return alert('Enter Email')\r\n        }\r\n        if(mobilenumber.value==='')\r\n        {\r\n            return alert('Enter Mobile Number')\r\n        }\r\n        if(address.value==='')\r\n        {\r\n            return alert('Enter Addres')\r\n        }\r\n\r\n        //Call Api and save\r\n        var patientModel={\r\n            \"name\":fullname.value,\r\n            \"email\":email.value,\r\n            \"mobilenumber\":mobilenumber.value,\r\n            \"address\":address.value,\r\n            \"dateregistered\":new Date().getFullYear()+\"-\"+(parseInt(new Date().getMonth().toString())+1)+\"-\"+new Date().getDate(),\r\n            \"createdby\":props.location.state.props.user.id\r\n        };\r\n\r\n        fetch(Api+\"patient/add\",{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },body:JSON.stringify(patientModel)\r\n        }).then(res=>res.text())\r\n        .then(success=>{\r\n            if(success===\"OK\")\r\n            {\r\n\t\t\t\t alert('Patient Added Successfully!');\r\n\t\t\t\t clearfields();\r\n\t\t\t\t setIsSuccess('true');\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\treturn alert('Patient Already Exists');\r\n        }).catch(err=>{\r\n\t\t\r\n            alert('An error occured while processing your request');\r\n        })\r\n\t}\r\n\t\r\n\tif(props.location.state.props.role!==undefined && !props.location.state.props.role.includes('All','Receptionist'))\r\n\treturn <Redirect to=\"/unauthorized\"/>\r\n\treturn (\r\n\t\t\r\n\t\t<div>\r\n\t\t\t<Header user={props.location.state.props.user} role={props.location.state.props.role} />\r\n\t\t\t<h3 style={{ float: 'left' }}>Manage Patient</h3>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"logintextheader\">Full Name</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={fullname.value}\r\n\t\t\t\t\t\tonChange={fullname.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"logintextheader\">Email</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tvalue={email.value}\r\n\t\t\t\t\t\tonChange={email.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"logintextheader\">Mobile Number</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"phone\"\r\n\t\t\t\t\t\tvalue={mobilenumber.value}\r\n\t\t\t\t\t\tonChange={mobilenumber.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"logintextheader\">Address</span>&nbsp;\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tvalue={address.value}\r\n\t\t\t\t\t\tplaceholder=\"Enter Address\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tonChange={address.onChange}\r\n\t\t\t\t\t/>\r\n                    <br/>\r\n                    <button className=\"btn btn-success\" onClick={Submit}>Save</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<br/>\r\n\t\t\t<PatientList _PatientList={patientList} Delete={Delete} DoctorList={doctors}/>\r\n\t\t\t<br/>\r\n\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction useFormDetails(initialInput) {\r\n\tconst [ value, setValue ] = useState(initialInput);\r\n\r\n\tfunction handleChange(e) {\r\n\t\tsetValue(e.target.value);\r\n\t}\r\n\tfunction setState(e, val) {\r\n\t\tdebugger;\r\n\t\tsetValue(val);\r\n\t}\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tonChange: handleChange,\r\n\t\tsetValue: setState\r\n\t};\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AppFooter() {\r\n    return (\r\n        <div style={{ width: '100%', bottom: '0', position: 'fixed', alignItems: 'Center' }}>\r\n       &copy; Copyright {new Date().getFullYear().toString()} Clinical Management System \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport default function StaffList(props) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n           <br/>\r\n\t\t\t<center style={{ visibility: props.userlist!==undefined && props.userlist.length > 0 ? 'visible' : 'hidden', width: '100%' }}>\r\n\t\t\t\t<div style={{float:\"left\",marginLeft:'30%'}}>\r\n\t\t\t\t\t<label>Search</label>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tstyle={{ width: '30%',marginRight:'32%', alignSelf: 'center' }}\r\n\t\t\t\t\t\tplaceholder=\"Enter Name or Mobile Number\"\r\n\t\t\t\t\t/>\r\n                    <br/>\r\n                    \r\n\t\t\t\t\r\n\t\t\t</center>\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{ visibility: props.userlist!==undefined && props.userlist.length > 0 ? 'visible' : 'hidden', width: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>full Name</th>\r\n\t\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t\t<th>Email Address</th>\r\n\t\t\t\t\t\t<th>Mobile Number</th>\r\n\t\t\t\t\t\t<th>Created Date</th>\r\n\t\t\t\t\t\t<th>Role</th>\r\n                        <th>Department</th>\r\n                        <th>Type</th>\r\n                        <th>Specialty</th>\r\n\t\t\t\t\t\t<th>Edit</th>\r\n\t\t\t\t\t\t<th>Delete</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props.userlist !== undefined && props.userlist.length > 0 ? (\r\n\t\t\t\t\t\tprops.userlist.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={index+1}>\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.name}>{users.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.address}>{users.address}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.email}>{users.email}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.mobilenumber}>{users.mobilenumber}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.datecreated}>{users.datecreated}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.role.name}>{users.role.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.department.name}>{users.department.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.stafftype.name}>{users.stafftype.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.specialty.name}>{users.specialty.name}</td>\r\n                                    <td key=\"edit\">\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.Edit(this, users.id, users)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"delete\">\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.Delete(this, users.id, index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\r\n                                    \r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tprops.userlist\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport Header from '../Header/header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Api } from '../../Helper/Api';\r\nimport { Redirect } from 'react-router-dom';\r\nimport StaffList from './StaffList';\r\nexport default function Staff(props) {\r\n\tlet fullname = useFormDetails('');\r\n\tconst username = useFormDetails('');\r\n\tconst address = useFormDetails('');\r\n\tconst mobilenumber = useFormDetails('');\r\n\tconst email = useFormDetails('');\r\n\tconst specialtyid = useFormDetails(0);\r\n\tconst stafftypeid = useFormDetails(0);\r\n\tconst departmentid = useFormDetails(0);\r\n\tconst roleid = useFormDetails(0);\r\n\tconst staffid = useFormDetails(0);\r\n\tconst [ departmentList, setDepartmentList ] = useState([]);\r\n\tconst [ roleList, setRoleList ] = useState([]);\r\n\tconst [ staffTypeList, setStaffTypeList ] = useState([]);\r\n\tconst [ specialty, setSpecialtyList ] = useState([]);\r\n\tconst [ userList, setUserList ] = useState([]);\r\n\tconst InputFocus = useRef(null);\r\n\tconst [ successMessage, setIsSuccess ] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.title = 'Manage Staff';\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tInputFocus.current.focus();\r\n\t\tconst fetchDepartment = async () => {\r\n\t\t\tawait fetch(Api + 'department/getall')\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetDepartmentList(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {});\r\n\t\t};\r\n\t\tfetchDepartment();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchRole = async () => {\r\n\t\t\tawait fetch(Api + 'role/getall')\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetRoleList(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {});\r\n\t\t};\r\n\t\tfetchRole();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchStaffType = async () => {\r\n\t\t\tawait fetch(Api + 'stafftype/getall')\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetStaffTypeList(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {});\r\n\t\t};\r\n\t\tfetchStaffType();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchSpecialty = async () => {\r\n\t\t\tawait fetch(Api + 'specialty/getall')\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetSpecialtyList(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {});\r\n\t\t};\r\n\t\tfetchSpecialty();\r\n\t}, []);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchUserList = async () => {\r\n\t\t\t\tawait fetch(Api + 'user/getall')\r\n\t\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t\t.then((success) => {\r\n\t\t\t\t\t\tsetUserList(success);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {});\r\n\t\t\t};\r\n\t\t\tfetchUserList();\r\n\t\t},\r\n\t\t[ successMessage ]\r\n\t);\r\n\tconst Edit = (e, id, obj) => {\r\n\t\tfullname.setValue(fullname, obj.name);\r\n\t\temail.setValue(email, obj.email);\r\n\t\tusername.setValue(username, obj.username);\r\n\t\tmobilenumber.setValue(mobilenumber, obj.mobilenumber);\r\n\t\taddress.setValue(address, obj.address);\r\n\t\tdepartmentid.setValue(departmentid, obj.departmentid);\r\n\t\tspecialtyid.setValue(specialtyid, obj.specialtyid);\r\n\t\tstafftypeid.setValue(stafftypeid, obj.stafftypeid);\r\n\t\troleid.setValue(roleid, obj.roleid);\r\n\t\tstaffid.setValue(staffid, obj.id);\r\n\t};\r\n\tconst Submit = () => {\r\n\t\tif (fullname.value === '') {\r\n\t\t\treturn alert('Enter staff Name');\r\n\t\t}\r\n\t\tif (email.value === '') {\r\n\t\t\treturn alert('Enter Email');\r\n\t\t}\r\n\t\tif (mobilenumber.value === '') {\r\n\t\t\treturn alert('Enter Mobile Number');\r\n\t\t}\r\n\t\tif (address.value === '') {\r\n\t\t\treturn alert('Enter Addres');\r\n\t\t}\r\n\t\tif (username.value === '') {\r\n\t\t\treturn alert('Enter Username');\r\n\t\t}\r\n\t\tif (stafftypeid.value === '') {\r\n\t\t\treturn alert('Select Staff Type');\r\n\t\t}\r\n\t\tif (specialtyid.value === '') {\r\n\t\t\treturn alert('Select Specialty');\r\n\t\t}\r\n\t\tif (departmentid.value === '') {\r\n\t\t\treturn alert('Select Department');\r\n\t\t}\r\n\t\tif (roleid.value === '') {\r\n\t\t\treturn alert('Select Role');\r\n\t\t}\r\n\r\n\t\tvar staffPostBody = {\r\n\t\t\tusername: username.value,\r\n\t\t\tmobilenumber: mobilenumber.value,\r\n\t\t\temail: email.value,\r\n\t\t\taddress: address.value,\r\n\t\t\tpassword: 'user1',\r\n\t\t\tspecialtyid: specialtyid.value,\r\n\t\t\tstafftypeid: stafftypeid.value,\r\n\t\t\tdepartmentid: departmentid.value,\r\n\t\t\tname: fullname.value,\r\n\t\t\tdatecreated:\r\n\t\t\t\tnew Date().getFullYear() +\r\n\t\t\t\t'-' +\r\n\t\t\t\t(parseInt(new Date().getMonth().toString()) + 1) +\r\n\t\t\t\t'-' +\r\n\t\t\t\tnew Date().getDate(),\r\n\t\t\troleid: roleid.value\r\n\t\t};\r\n\t\t//post to api\r\n\t\tif (staffid.value < 1) {\r\n\t\t\tfetch(Api + 'user/add', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'content-type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(staffPostBody)\r\n\t\t\t})\r\n\t\t\t\t.then((res) => res.text())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tif (success === 'OK') {\r\n\t\t\t\t\t\talert('User created Successfully');\r\n\t\t\t\t\t\tClearField();\r\n\t\t\t\t\t\tsetIsSuccess('success');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert('Username already taken by another staff');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('An error occured while performing your request');\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tfetch(Api + 'user/update/'+staffid.value, {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'content-type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(staffPostBody)\r\n\t\t\t})\r\n\t\t\t\t.then((res) => res.text())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tif (success === 'OK') {\r\n\t\t\t\t\t\talert('User Updated Successfully');\r\n\t\t\t\t\t\tCancel();\r\n\t\t\t\t\t\tsetIsSuccess('success');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert('An error occured while performing your request');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('An error occured while performing your request');\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst Delete = (e, index) => {\r\n\t\tif (window.confirm('Are you sure you want to delete this user?')) {\r\n\t\t\tdebugger;\r\n\t\t\tfetch(Api + 'user/delete/' + index, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.text())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\talert('user deleted successfully!');\r\n\t\t\t\t\tsetIsSuccess('success');\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('An error occured while processing your request');\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\tconst ClearField = () => {\r\n\t\tusername.value = '';\r\n\t\tmobilenumber.value = '';\r\n\t\temail.value = '';\r\n\t\taddress.value = '';\r\n\t\tspecialtyid.value = '';\r\n\t\tstafftypeid.value = '';\r\n\t\tdepartmentid.value = '';\r\n\t\tfullname.value = '';\r\n\t\troleid.value = '';\r\n\t\tstaffid.value = 0;\r\n\t};\r\n\tconst Cancel = () => {\r\n\t\tfullname.setValue(fullname, '');\r\n\t\temail.setValue(email, '');\r\n\t\tusername.setValue(username, '');\r\n\t\tmobilenumber.setValue(mobilenumber, '');\r\n\t\taddress.setValue(address, '');\r\n\t\tdepartmentid.setValue(departmentid, '');\r\n\t\tspecialtyid.setValue(specialtyid, '');\r\n\t\tstafftypeid.setValue(stafftypeid, '');\r\n\t\troleid.setValue(roleid, '');\r\n\t\tstaffid.setValue(staffid, '');\r\n\t};\r\n\tif (props.location.state.props.role !== undefined && !props.location.state.props.role.includes('All', 'User'))\r\n\t\treturn <Redirect to=\"/unauthorized\" />;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header user={props.location.state.props.user} role={props.location.state.props.role} />\r\n\t\t\t<h3 style={{ float: 'left' }}>Manage Staff/users</h3>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"logintextheader\">Full Name</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tref={InputFocus}\r\n\t\t\t\t\t\tvalue={fullname.value}\r\n\t\t\t\t\t\tonChange={fullname.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"logintextheader\">Email</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tvalue={email.value}\r\n\t\t\t\t\t\tonChange={email.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"logintextheader\">Mobile Number</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"phone\"\r\n\t\t\t\t\t\tvalue={mobilenumber.value}\r\n\t\t\t\t\t\tonChange={mobilenumber.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"logintextheader\">Address</span>&nbsp;\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tvalue={address.value}\r\n\t\t\t\t\t\tplaceholder=\"Enter Address\"\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t\tonChange={address.onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className=\"logintextheader\">Username</span>&nbsp;\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={username.value}\r\n\t\t\t\t\t\tonChange={username.onChange}\r\n\t\t\t\t\t\treadOnly={staffid.value > 0}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"logintextheader\">Staff Type</span>&nbsp;\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tvalue={stafftypeid.value}\r\n\t\t\t\t\t\tonChange={stafftypeid.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option>--Select</option>\r\n\t\t\t\t\t\t{staffTypeList.length > 0 ? (\r\n\t\t\t\t\t\t\tstaffTypeList.map((x) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option key={x.id} value={x.id}>\r\n\t\t\t\t\t\t\t\t\t\t{x.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<span className=\"logintextheader\">Specialty</span>&nbsp;\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tvalue={specialtyid.value}\r\n\t\t\t\t\t\tonChange={specialtyid.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option>--Select</option>\r\n\t\t\t\t\t\t{specialty.length > 0 ? (\r\n\t\t\t\t\t\t\tspecialty.map((x) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option key={x.id} value={x.id}>\r\n\t\t\t\t\t\t\t\t\t\t{x.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<span className=\"logintextheader\">Department</span>&nbsp;\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tvalue={departmentid.value}\r\n\t\t\t\t\t\tonChange={departmentid.onChange}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option>--Select</option>\r\n\t\t\t\t\t\t{departmentList.length > 0 ? (\r\n\t\t\t\t\t\t\tdepartmentList.map((x) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option key={x.id} value={x.id}>\r\n\t\t\t\t\t\t\t\t\t\t{x.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<span className=\"logintextheader\">Role Id</span>&nbsp;\r\n\t\t\t\t\t<select value={roleid.value} onChange={roleid.onChange} className=\"form-control LoginInputTextSize\">\r\n\t\t\t\t\t\t<option>--Select</option>\r\n\t\t\t\t\t\t{roleList.length > 0 ? (\r\n\t\t\t\t\t\t\troleList.map((x) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option key={x.id} value={x.id}>\r\n\t\t\t\t\t\t\t\t\t\t{x.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={Submit}>\r\n\t\t\t\t\t\t{staffid.value > 0 ? 'Update' : 'Save'}\r\n\t\t\t\t\t</button>&nbsp;&nbsp;\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\tonClick={() => Cancel()}\r\n\t\t\t\t\t\tstyle={{ visibility: staffid.value > 0 ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<StaffList userlist={userList} Delete={Delete} Edit={Edit} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction useFormDetails(initialInput) {\r\n\tconst [ value, setValue ] = useState(initialInput);\r\n\r\n\tfunction handleChange(e) {\r\n\t\tdebugger;\r\n\t\tsetValue(e.target.value);\r\n\t}\r\n\r\n\tfunction setState(e, val) {\r\n\t\tdebugger;\r\n\t\tsetValue(val);\r\n\t}\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tonChange: handleChange,\r\n\t\tsetValue: setState\r\n\t};\r\n}\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport default function Diseases(props) {\r\n\tconst [ currentPage, setCurrentPage ] = useState(1);\r\n\tconst [ diseasePerPage, setDiseasePerPage ] = useState(50);\r\n    const pageNumbers = [];\r\n\r\n\tconst handleClick = (e) => {\r\n       \r\n\t\tsetCurrentPage(Number(e.target.id));\r\n    };\r\n    const handleDisesesPerPage=(e)=>{\r\n        setDiseasePerPage(e.target.value);\r\n    }\r\n\r\n\tfor (let i = 1; i <= Math.ceil(props.Diseases === undefined ? 0 : props.Diseases.length / diseasePerPage); i++) {\r\n\t\tpageNumbers.push(i);\r\n    }\r\n\tconst indexOfLastDisease = currentPage * diseasePerPage;\r\n\tvar indexOfFirstDisease = indexOfLastDisease - diseasePerPage;\r\n\tconst currentDisease = props.Diseases.slice(indexOfFirstDisease, indexOfLastDisease);\r\n\r\n\tconst renderPageNumbers = pageNumbers.map((number) => {\r\n\t\treturn (\r\n\t\t\t<ul className=\"pagination\" style={{ display: 'inline-block', alignItems: 'center' }}>\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName=\"page-link\"\r\n\t\t\t\t\tstyle={{ listStyleType: 'none' }}\r\n\t\t\t\t\tkey={number}\r\n\t\t\t\t\tid={number}\r\n\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t{number}\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t);\r\n    });\r\n   \r\n\treturn (\r\n      \r\n\t\t<React.Fragment>\r\n\t\t\t<br />\r\n\r\n\t\t\t<center\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tvisibility: props.Diseases !== undefined && props.Diseases.length > 0 ? 'visible' : 'hidden',\r\n\t\t\t\t\twidth: '100%'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\r\n\r\n\t\t\t\t{/* <input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tstyle={{ width: '30%', marginRight: '32%', alignSelf: 'center' }}\r\n\t\t\t\t\tplaceholder=\"Enter disease name\" onChange={handleSearchParam}\r\n\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t<label style={{ float: 'left'}}>Sort Disease Per Page </label>&nbsp;&nbsp;&nbsp;\r\n                    <select className=\"form-control\" style={{ width: '10%', float:'left',marginLeft:'30px', alignSelf: 'center' }} value={diseasePerPage} onChange={handleDisesesPerPage}>\r\n                        <option key=\"50\" value=\"50\">50</option>\r\n                        <option key=\"100\" value=\"100\">100</option>\r\n                        <option key=\"500\" value=\"500\">500</option>\r\n                    </select>\r\n\r\n                    <label style={{ float: 'right',marginRight:'50px',fontWeight:\"bold\"}}>Total Registered Diseases.{props.Diseases.length} </label>&nbsp;&nbsp;&nbsp;\r\n\r\n                    <br/>\r\n                \r\n\t\t\t\t<br />\r\n\t\t\t</center>\r\n\t\t\t<div />\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tvisibility: props.Diseases !== undefined && props.Diseases.length > 0 ? 'visible' : 'hidden',\r\n\t\t\t\t\twidth: '100%'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Edit</th>\r\n\t\t\t\t\t\t<th>Delete</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentDisease !== undefined && currentDisease.length > 0 ? (\r\n\t\t\t\t\t\tcurrentDisease.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={index + 1}>\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.name}>{users.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"edit\">\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.Edit(this, users)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"delete\">\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.Delete(this, users.id, index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tprops.Diseases\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<center> {renderPageNumbers} </center>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport Header from '../Header/header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Api } from '../../Helper/Api';\r\nimport DiseaseList from './DiseaseList';\r\nexport default function ManageDisease(props) {\r\n\tconst [ diseaseName, setDiseaseName ] = useState('');\r\n    const [ diseaseList, setDiseaseList ] = useState([]);\r\n    const [diseaseid,setDiseaseid]=useState(0);\r\n    const [ success, setSuccess ] = useState(0);\r\n    \r\n\tconst InputFocus = useRef(null);\r\n\tuseEffect(() => {\r\n\t\tdocument.title = 'Manage Diseases';\r\n\t\tInputFocus.current.focus();\r\n\t});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchDiseases = async () => {\r\n\t\t\t\tawait fetch(Api + 'condition/getall')\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then((success) => {\r\n\t\t\t\t\t\tsetDiseaseList(success);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\talert('An error occured while fetching the disease list');\r\n\t\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tfetchDiseases();\r\n\t\t},\r\n\t\t[ success ]\r\n\t);\r\n\r\n\tconst handleOnchange = (e) => {\r\n\t\tsetDiseaseName(e.target.value);\r\n\t};\r\n\tconst handleEdit = (e,model) => {\r\n        \r\n        setDiseaseName(model.name);\r\n        setDiseaseid(model.id);\r\n    };\r\n    const handleCancel=e=>{\r\n        setDiseaseid(0);\r\n        setDiseaseName('')\r\n    }\r\n    const handleClear=()=>{\r\n        setDiseaseName('');\r\n        setDiseaseid(0);\r\n    };\r\n    const handleSearch=(e,index)=>{\r\n     fetch(Api+\"condition/search/\"+e)\r\n     .then(response=>response.json())\r\n     .then(success=>{\r\n         debugger;\r\n     })\r\n    }\r\n\tconst handleDelete = (e,id) => {\r\n        if(window.confirm('Are you sure you want to delete this disease?'))\r\n        fetch(Api+\"condition/delete/\"+id,{\r\n            method:'DELETE',\r\n            headers:{\r\n                'content-type':'application/json'\r\n            }\r\n        }).then(response=>response.text())\r\n        .then(success=>{\r\n            if(success===\"OK\")\r\n            {\r\n                alert('Disease deleted successfully!');\r\n                setSuccess(id);\r\n                handleClear();\r\n                return;\r\n            }\r\n            else{\r\n                alert('An error occured while performing your request!')\r\n            }\r\n        }).catch(err=>{\r\n            alert('An error occured while performing your request')\r\n        })\r\n    };\r\n\tconst handleSave = (e) => {\r\n        if(diseaseName==='')\r\n        {\r\n            return alert('Enter disease name')\r\n        }\r\n\r\n        var diseaseData={\r\n            name:diseaseName\r\n        };\r\n\r\n        if(diseaseid>0)\r\n        {\r\n            fetch(Api+\"condition/update/\"+diseaseid,{\r\n                method:'PUT',\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify(diseaseData)\r\n            }).then(response=>response.text())\r\n              .then(success=>{\r\n                  if(success===\"OK\")\r\n                 {\r\n                     alert('Disease has been updated successfully!')\r\n                     setSuccess(diseaseid)\r\n                     handleClear();\r\n                     return;\r\n                 }\r\n                 \r\n              }).catch(err=>{\r\n                  alert('An error occured while performing your request!')\r\n              })\r\n        }\r\n        else\r\n        {\r\n            fetch(Api+\"condition/add\",{\r\n                method:'POST',\r\n                headers:{\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify(diseaseData)\r\n            }).then(response=>response.text())\r\n              .then(success=>{\r\n                  if(success===\"OK\")\r\n                 {\r\n                     alert('Disease added successfully!')\r\n                     setSuccess(1)\r\n                     return;\r\n                 }\r\n                 \r\n                 else\r\n                 alert('Disease already exists');\r\n              })\r\n        }\r\n    };\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header user={props.location.state.props.user} role={props.location.state.props.role} />\r\n\t\t\t<h3 style={{ float: 'left' }}>Manage Disease(s).</h3>\r\n\r\n\t\t\t<center>\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"logintextheader\">Disease Name</span>&nbsp;\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tref={InputFocus}\r\n\t\t\t\t\t\tvalue={diseaseName}\r\n\t\t\t\t\t\tonChange={handleOnchange}\r\n\t\t\t\t\t\tstyle={{ float: 'left' }}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={()=>handleSave()}>{diseaseid>0?\"Update\":\"Save\"}</button> &nbsp;&nbsp;&nbsp;\r\n                    <button className=\"btn btn-danger\"style={{visibility:diseaseid>0?\"visible\":\"hidden\"}} onClick={()=>handleCancel()}>Cancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t</center>\r\n\r\n\t\t\t<br />\r\n            <br/>\r\n            <DiseaseList Diseases={diseaseList} Edit={handleEdit} Delete={handleDelete} Search={handleSearch}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport default function DepartmentList(props) {\r\n\tconst [ currentPage, setCurrentPage ] = useState(1);\r\n\tconst [ diseasePerPage, setDiseasePerPage ] = useState(50);\r\n\tconst pageNumbers = [];\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tsetCurrentPage(Number(e.target.id));\r\n\t};\r\n\tconst handleDisesesPerPage = (e) => {\r\n\t\tsetDiseasePerPage(e.target.value);\r\n\t};\r\n\r\n\tfor (let i = 1; i <= Math.ceil(props.Diseases === undefined ? 0 : props.Diseases.length / diseasePerPage); i++) {\r\n\t\tpageNumbers.push(i);\r\n\t}\r\n\tconst indexOfLastDisease = currentPage * diseasePerPage;\r\n\tvar indexOfFirstDisease = indexOfLastDisease - diseasePerPage;\r\n\tconst currentDisease = props.Diseases.slice(indexOfFirstDisease, indexOfLastDisease);\r\n\r\n\tconst renderPageNumbers = pageNumbers.map((number) => {\r\n\t\treturn (\r\n\t\t\t<ul className=\"pagination\" style={{ display: 'inline-block', alignItems: 'center' }}>\r\n\t\t\t\t<li\r\n\t\t\t\t\tclassName=\"page-link\"\r\n\t\t\t\t\tstyle={{ listStyleType: 'none' }}\r\n\t\t\t\t\tkey={number}\r\n\t\t\t\t\tid={number}\r\n\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t{number}\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<br />\r\n\r\n\t\t\t<center\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tvisibility: props.Diseases !== undefined && props.Diseases.length > 0 ? 'visible' : 'hidden',\r\n\t\t\t\t\twidth: '100%'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<label style={{ float: 'left' }}>Sort Department Per Page </label>&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tstyle={{ width: '10%', float: 'left', marginLeft: '30px', alignSelf: 'center' }}\r\n\t\t\t\t\tvalue={diseasePerPage}\r\n\t\t\t\t\tonChange={handleDisesesPerPage}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option key=\"50\" value=\"50\">\r\n\t\t\t\t\t\t50\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t<option key=\"100\" value=\"100\">\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t<option key=\"500\" value=\"500\">\r\n\t\t\t\t\t\t500\r\n\t\t\t\t\t</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<label style={{ float: 'right', marginRight: '50px', fontWeight: 'bold' }}>\r\n\t\t\t\t\tTotal Registered Department(s).{props.Diseases.length}{' '}\r\n\t\t\t\t</label>&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t</center>\r\n\t\t\t<div />\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tvisibility: props.Diseases !== undefined && props.Diseases.length > 0 ? 'visible' : 'hidden',\r\n\t\t\t\t\twidth: '100%'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Created by</th>\r\n\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{currentDisease !== undefined && currentDisease.length > 0 ? (\r\n\t\t\t\t\t\tcurrentDisease.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={index + 1}>\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.name}>{users.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.user.username + index}>{users.user.username}</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"edit\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={() => props.Edit(this, users)}>\r\n\t\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t\t</button>{' '}\r\n\t\t\t\t\t\t\t\t\t\t|{' '}\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.Delete(this, users.id, index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tprops.Diseases\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<center> {renderPageNumbers} </center>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport Header from '../Header/header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Api } from '../../Helper/Api';\r\nimport DepartmentList from './DepartmentList';\r\nexport default function ManageDisease(props) {\r\n\tconst [ departmentName, setDepartmentName ] = useState('');\r\n\tconst [ departmentList, setDepartmentList ] = useState([]);\r\n\tconst [ departmentid, setDepartmentId ] = useState(0);\r\n\tconst [ success, setSuccess ] = useState('');\r\n\r\n\tconst InputFocus = useRef(null);\r\n\tuseEffect(() => {\r\n\t\tdocument.title = 'Manage Department';\r\n\t\tInputFocus.current.focus();\r\n\t});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst fetchDepartment = async () => {\r\n\t\t\t\tawait fetch(Api + 'department/getall')\r\n\t\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t\t.then((success) => {\r\n\t\t\t\t\t\tsetDepartmentList(success);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\talert('An error occured while fetching the department list');\r\n\t\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tfetchDepartment();\r\n\t\t},\r\n\t\t[ success ]\r\n\t);\r\n\r\n\tconst handleOnchange = (e) => {\r\n\t\tsetDepartmentName(e.target.value);\r\n\t};\r\n\tconst handleEdit = (e, model) => {\r\n\t\tsetDepartmentName(model.name);\r\n\t\tsetDepartmentId(model.id);\r\n\t};\r\n\tconst handleCancel = (e) => {\r\n\t\tsetDepartmentId(0);\r\n\t\tsetDepartmentName('');\r\n\t};\r\n\tconst handleClear = () => {\r\n\t\tsetDepartmentName('');\r\n\t\tsetDepartmentId(0);\r\n\t};\r\n\r\n\tconst handleDelete = (e, id) => {\r\n\t\tdebugger;\r\n\t\tif (window.confirm('Are you sure you want to delete this department?'))\r\n\t\t\tfetch(Api + 'department/delete/' + id, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'content-type': 'application/json'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.text())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tif (success === 'OK') {\r\n\t\t\t\t\t\talert('Department deleted successfully!');\r\n\t\t\t\t\t\tsetSuccess('success');\r\n\t\t\t\t\t\thandleClear();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\r\n\t\t\t\t\t\t\t'An error occured while performing your request because this department ' +\r\n\t\t\t\t\t\t\t\t'is mapped to employees. if you wish to delete this department, kindly delete the employees attached to it or update their department(s).'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('Cannot delete the department because it is mapped to employees');\r\n\t\t\t\t});\r\n\t};\r\n\tconst handleSave = (e) => {\r\n\t\tif (departmentName === '') {\r\n\t\t\treturn alert('Enter department name');\r\n\t\t}\r\n\r\n\t\tvar departmentData = {\r\n\t\t\tname: departmentName,\r\n\t\t\tcreatedby: props.location.state.props.user.id\r\n\t\t};\r\n\r\n\t\tif (departmentid > 0) {\r\n\t\t\tfetch(Api + 'department/update/' + departmentid, {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(departmentData)\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.text())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tif (success === 'OK') {\r\n\t\t\t\t\t\talert('department has been updated successfully!');\r\n\t\t\t\t\t\tsetSuccess('updated');\r\n\t\t\t\t\t\thandleClear();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('An error occured while performing your request!');\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tfetch(Api + 'department/add', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(departmentData)\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.text())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tif (success === 'OK') {\r\n\t\t\t\t\t\talert('Department added successfully!');\r\n\t\t\t\t\t\tsetSuccess('updated');\r\n\t\t\t\t\t\tsetDepartmentName('');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else alert('Department already exists');\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header user={props.location.state.props.user} role={props.location.state.props.role} />\r\n\t\t\t<h3 style={{ float: 'left' }}>Manage Department(s).</h3>\r\n\r\n\t\t\t<center>\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<span className=\"logintextheader\">Department Name</span>&nbsp;\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tref={InputFocus}\r\n\t\t\t\t\t\tvalue={departmentName}\r\n\t\t\t\t\t\tonChange={handleOnchange}\r\n\t\t\t\t\t\tstyle={{ float: 'left' }}\r\n\t\t\t\t\t\tclassName=\"form-control LoginInputTextSize\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={() => handleSave()}>\r\n\t\t\t\t\t\t{departmentid > 0 ? 'Update' : 'Save'}\r\n\t\t\t\t\t</button>{' '}\r\n\t\t\t\t\t&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\tstyle={{ visibility: departmentid > 0 ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t\tonClick={() => handleCancel()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</center>\r\n\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<DepartmentList Diseases={departmentList} Edit={handleEdit} Delete={handleDelete} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport default function viewHistoryDetails(props) {\r\n    \r\n    const {medicalDetails}=props;\r\n    \r\n    return (\r\n        medicalDetails!==null?\r\n        <center><div className=\"row\" style={{width:'100%',border:'1px solid black',borderRadius:'20px'}}>\r\n            <br/>\r\n\r\n            <div className=\"col-md-5\">\r\n            Date Visited: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.datevisited}</label>\r\n            <br/>\r\n            Complaint: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.complaints}</label>\r\n            <br/>\r\n            Test Required?: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.istestrequired}</label>\r\n            <br/>\r\n            Test Details: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.testdetails}</label>\r\n            <br/>\r\n            Test Results: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.testresult===null?\r\n            \"No Results Yet\":props.medicalDetails.testresult.testupload}</label>\r\n            <br/>\r\n            </div>\r\n\r\n            <div className=\"col-md-5\">\r\n            Test Done By: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.user===null?\r\n            \"No One has conducted test for the patient\":props.medicalDetails.user.name}</label>\r\n            <br/>\r\n            Diagnosed <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.condition===null?\r\n            \"No Diagnosis Yet\":props.medicalDetails.condition.name}</label>\r\n            <br/>\r\n            Prescription: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.prescription===''?\"No prescription Yet\"\r\n            :props.medicalDetails.prescription}</label>\r\n            <br/>\r\n            </div>\r\n        </div></center>:<div></div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Api } from '../../Helper/Api';\r\nimport ViewHistorydetails from './viewHistoryDetails';\r\nexport default function ViewHistory(props) {\r\n\t\r\n\tconst [ medicalhistory, setMedicalHistory ] = useState([]);\r\n\tconst [ isDivOpen, setDivOpen ] = useState(false);\r\n\tconst [medicalDetails,setMedicalDetails]=useState(null);\r\n\tfunction toggle(e,id) {\r\n\t\tsetMedicalDetails(id); \r\n\t\tif (!isDivOpen) setDivOpen(true);\r\n\t\telse setDivOpen(false);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconst fetDiseases = () => {\r\n\t\t\tfetch(Api + 'medicalhistory/getbyid/' + props.userdetals.userdata.patient.id)\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetMedicalHistory(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert(err.message);\r\n\t\t\t\t});\r\n\t\t};\r\n\t\tfetDiseases();\r\n\t}, [props.userdetals.userdata.patient.id]);\r\n\r\n\treturn (\r\n\t\t<div style={{ overflowY: 'scroll' }}>\r\n\t\t\t<h6 style={{ float: 'left' }}>Medical History for {props.userdetals.userdata.patient.name}</h6>\r\n\t\t\t<br />\r\n\t\t\t<div id=\"demo\" className={'collapse' + (isDivOpen ? ' in' : '')}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ViewHistorydetails userdetals={props} medicalDetails={medicalDetails} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{ visibility: medicalhistory.length > 0 ? 'visible' : 'hidden', width: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>full Name</th>\r\n\t\t\t\t\t\t<th>Date Visited</th>\r\n\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{medicalhistory !== undefined && medicalhistory.length > 0 ? (\r\n\t\t\t\t\t\tmedicalhistory.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={users.id}>\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.name}>{users.patient.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.datevisited}>{users.datevisited}</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"delete\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-info\" onClick={()=>toggle(this,users)}>View details</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t'No Medical History Found'\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Api } from '../../Helper/Api';\r\nimport ViewHistory from './viewhistory';\r\nexport default function ComplaintDetails(props) {\r\n\tconst [ testRequired, setTestRequired ] = useState('');\r\n\tconst [ complaint, setComplaint ] = useState('');\r\n\tconst [ testDetails, setTestDetails ] = useState('');\r\n\tconst [ prescription, setPrescription ] = useState('');\r\n\tconst [ isDivOpen, setDivOpen ] = useState(false);\r\n\r\n\tconst Inputfocus = useRef(null);\r\n\tuseEffect(() => {\r\n\t\tInputfocus.current.focus();\r\n\t}, []);\r\n\r\n\tconst handleComplaintChange = (e) => {\r\n\t\tsetComplaint(e.target.value);\r\n\t};\r\n\tfunction handleIsTestRequired(e) {\r\n\t\tsetTestRequired(e.target.value);\r\n\t}\r\n\tfunction handleIsTestDetails(e) {\r\n\t\tsetTestDetails(e.target.value);\r\n\t}\r\n\tfunction handleSetPrescription(e) {\r\n\t\tsetPrescription(e.target.value);\r\n\t}\r\n\tfunction toggle(e) {\r\n\t\tif (!isDivOpen) setDivOpen(true);\r\n\t\telse setDivOpen(false);\r\n\t}\r\n\tconst Send = (e) => {\r\n\t\tif (complaint.trim() === '') {\r\n\t\t\treturn alert('Enter patient complaint');\r\n\t\t}\r\n\r\n\t\tif (testRequired === '') {\r\n\t\t\treturn alert('Select if test is required');\r\n\t\t}\r\n\t\tif (testRequired === 'Yes' && testDetails.trim() === '') {\r\n\t\t\treturn alert('Enter test details');\r\n\t\t}\r\n\t\tif (testRequired === 'No' && prescription.trim() === '') {\r\n\t\t\treturn alert('Enter patient prescription');\r\n\t\t}\r\n\r\n\t\tvar patientData = {\r\n\t\t\tcomplaints: complaint,\r\n\t\t\tistestrequired: testRequired,\r\n\t\t\tprescription: prescription,\r\n\t\t\ttestdetails: testDetails,\r\n\t\t\t//doctorvisited: props.loggedinuser.location.state.props.user.id,\r\n\t\t\tattendedto: testRequired === 'No' ? 'Yes' : 'No',\r\n\t\t\tactiontaken: testRequired === 'No' ? 'Patient Given Medication' : ''\r\n\t\t};\r\n\t\tfetch(Api + 'medicalhistory/update/' + props.userdata.id, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(patientData)\r\n\t\t})\r\n\t\t\t.then((res) => res.text())\r\n\t\t\t.then((success) => {\r\n\t\t\t\talert('Details saved successfully!');\r\n\t\t\t\twindow.location.reload(true);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\talert('An error occured while processing your request!.');\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h3>Details for {props.userdata.patient.name}</h3>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tName : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.name}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tEmail Address : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.email}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tMobile Number : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.mobilenumber}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tCurrent BP: <label style={{ fontWeight: 'bold' }}>{props.userdata.bp}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tCurrent Weight: <label style={{ fontWeight: 'bold' }}>{props.userdata.weight}</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tComplaint :{' '}\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tref={Inputfocus}\r\n\t\t\t\t\t\tvalue={complaint}\r\n\t\t\t\t\t\tonChange={handleComplaintChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\tIsTestRequired? :<select\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={testRequired}\r\n\t\t\t\t\t\tonChange={handleIsTestRequired}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option>--select--</option>\r\n\t\t\t\t\t\t<option key=\"Yes\" value=\"Yes\">\r\n\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option key=\"No\" value=\"No\">\r\n\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tvisibility: testRequired === 'Yes' ? 'visible' : 'hidden',\r\n\t\t\t\t\t\t\tdisplay: testRequired === 'No' ? 'none' : ''\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTest details :{' '}\r\n\t\t\t\t\t\t<textarea className=\"form-control\" value={testDetails} onChange={handleIsTestDetails} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tvisibility: testRequired === 'No' ? 'visible' : 'hidden',\r\n\t\t\t\t\t\t\tdisplay: testRequired === 'Yes' ? 'none' : ''\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPrescription :{' '}\r\n\t\t\t\t\t\t<textarea className=\"form-control\" value={prescription} onChange={handleSetPrescription} />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn btn-success\" onClick={() => Send()}>\r\n\t\t\t\tSend\r\n\t\t\t</button>{' '}\r\n\t\t\t<button className=\"btn btn-primary\" onClick={toggle}>\r\n\t\t\t\tView Medical History\r\n\t\t\t</button>\r\n\t\t\t<div id=\"demo\" className={'collapse' + (isDivOpen ? ' in' : '')}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ViewHistory userdetals={props} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Api } from '../../Helper/Api';\r\nexport default function ComplaintDetails(props) {\r\n\t\r\n\tconst [ diseaseid, setDiseaseId ] = useState(0);\r\n\tconst [ prescription, setPrescription ] = useState('');\r\n\r\n\tconst Inputfocus = useRef(null);\r\n\tuseEffect(() => {\r\n\t\tInputfocus.current.focus();\r\n\t}, []);\r\n\r\n\tfunction handleDiseaseChange(e) {\r\n\t\tsetDiseaseId(e.target.value);\r\n\t}\r\n\tfunction handleSetPrescription(e) {\r\n\t\r\n\t\tsetPrescription(e.target.value);\r\n\t}\r\n\tconst Send = (e) => {\r\n\t\tif (prescription.trim() === '') {\r\n\t\t\treturn alert('Enter prescription');\r\n\t\t}\r\n\r\n\t\tif (diseaseid === 0) {\r\n\t\t\treturn alert('Select disease diagnosed');\r\n\t\t}\r\n\t\t\r\n\t\tvar patientData = {\r\n\t\t\tprescription:prescription,\r\n\t\t\tactiontaken:prescription,\r\n\t\t\tconditionid:diseaseid,\r\n\t\t\tattendedto:'TRUE'\r\n\t\t\r\n\t\t};\r\n\t\tfetch(Api + 'medicalhistory/doctorupdate/' + props.userdata.id, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(patientData)\r\n\t\t})\r\n\t\t\t.then((res) => res.text())\r\n\t\t\t.then((success) => {\r\n\t\t\t\talert('Details saved successfully!');\r\n\t\t\t\twindow.location.reload(true);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\talert('An error occured while processing your request!.');\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h3>Details for {props.userdata.patient.name}</h3>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tName : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.name}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tEmail Address : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.email}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tMobile Number : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.mobilenumber}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tCurrent BP: <label style={{ fontWeight: 'bold' }}>{props.userdata.bp}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tCurrent Weight: <label style={{ fontWeight: 'bold' }}>{props.userdata.weight}</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tComplaint : <label style={{ fontWeight: 'bold' }}>{props.userdata.complaints}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tTest Details : <label style={{ fontWeight: 'bold' }}>{props.userdata.testdetails}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tTest Result : <label style={{ fontWeight: 'bold' }}>{props.userdata.testresult.testupload}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tDiagnosed:<select  className=\"form-control\" value={diseaseid} onChange={handleDiseaseChange}>\r\n\t\t\t\t\t\t<option key=\"0\" value=\"0\">\r\n\t\t\t\t\t\t\t--Select--\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{props.diseases !== undefined && props.diseases.length > 0 ? (\r\n\t\t\t\t\t\t\tprops.diseases.map((x) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option key={x.id} value={x.id}>\r\n\t\t\t\t\t\t\t\t\t\t{x.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\tPrescription :{' '}\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tref={Inputfocus}\r\n\t\t\t\t\t\tvalue={prescription}\r\n\t\t\t\t\t\tonChange={handleSetPrescription}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn btn-success\" onClick={() => Send()}>\r\n\t\t\t\tSave\r\n\t\t\t</button>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Popup from 'reactjs-popup';\r\nimport { Api } from '../../Helper/Api';\r\nimport Header from '../Header/header';\r\nimport ComplaintDetails from './ComplaintDetails';\r\nimport ComplaintDetailsResult from './ComplaintDetailsResult';\r\nexport default function ManageComplaints(props) {\r\n\tconst [ complaintList, setComplaintList ] = useState([]);\r\n\tconst [ conditionList, setConditionList ] = useState([]);\r\n\tconst [ success, setSuccess ] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetDiseases = async () => {\r\n\t\t\tawait fetch(Api + 'condition/getAll')\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tsetConditionList(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {});\r\n\t\t};\r\n\t\tfetDiseases();\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tconst fetchComplaintsToday = async () => {\r\n\t\t\tawait fetch(\r\n\t\t\t\tApi +\r\n\t\t\t\t\t'medicalhistory/getMedicalHistoryByDate/' +\r\n\t\t\t\t\tnew Date().getFullYear() +\r\n\t\t\t\t\t'-' +\r\n\t\t\t\t\t(parseInt(new Date().getMonth().toString()) + 1) +\r\n\t\t\t\t\t'-' +\r\n\t\t\t\t\tnew Date().getDate()\r\n\t\t\t)\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetComplaintList(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('An error occured while fetching complaints for today');\r\n\t\t\t\t});\r\n\t\t};\r\n\t\tfetchComplaintsToday();\r\n\t}, [success]);\r\n\r\n\tconst Delete=(e,id)=>{\r\n\t\tdebugger;\r\n\t\tif(window.confirm('Are you aure you want to delete?'))\r\n\t\tfetch(Api+\"medicalhistory/deletecomplaint/\"+id,{\r\n\t\t\tmethod:'DELETE',\r\n\t\t\theaders:{\r\n\t\t\t\t'content-type':'application/json'\r\n\t\t\t}\r\n\t\t}).then(res=>res.text())\r\n\t\t.then(success=>{\r\n\t\t\tif(success===\"OK\")\r\n\t\t\t{\r\n\t\t\t\tsetSuccess('success');\r\n\t\t\t\treturn alert('Record deleted successfully!')\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\talert('An error occured while trying to delete this record')\r\n\t\t\t}\r\n\t\t}).catch(err=>{\r\n\t\t\talert('An error occured while performing the delete operation')\r\n\t\t})\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Header user={props.location.state.props.user} role={props.location.state.props.role} />\r\n\t\t\t<h3 style={{ float: 'left' }}>Manage Patient Complaints</h3>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t{\r\n\t\t\t\t<center><div className=\"alert alert-info\" style={{visibility:complaintList.length<1?\"visible\":\"hidden\"}}>\r\n\t\t\t\t\tDear {props.location.state.props.user.name}, There are {complaintList\r\n\t\t\t\t\t.length} pending complaint(s) for today.\r\n\t\t\t\t</div></center>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{ visibility: complaintList.length > 0 ? 'visible' : 'hidden', width: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>full Name</th>\r\n\t\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t\t<th>Email Address</th>\r\n\t\t\t\t\t\t<th>Mobile Number</th>\r\n\t\t\t\t\t\t<th>Date Visited</th>\r\n\r\n\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{complaintList.length > 0 ? (\r\n\t\t\t\t\t\tcomplaintList.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={users.id}>\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.name}>{users.patient.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.address}>{users.patient.address}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.email}>{users.patient.email}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.mobilenumber}>{users.patient.mobilenumber}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.datevisited}>{users.datevisited}</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"delete\">\r\n\t\t\t\t\t\t\t\t\t\t<Popup\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger={<button className=\"btn btn-primary\"> View Details </button>}\r\n\t\t\t\t\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\t\t\t\t\tcloseOnDocumentClick\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{!users.istesttaken?<ComplaintDetails userdata={users} diseases={conditionList} loggedinuser={props} />\r\n\t\t\t\t\t\t\t\t\t\t\t:<ComplaintDetailsResult userdata={users} diseases={conditionList} loggedinuser={props} />}\r\n\t\t\t\t\t\t\t\t\t\t</Popup>|<button className=\"btn btn-danger\" onClick={()=>Delete(this,users.id)}>Delete</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tcomplaintList\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../Assets/styles/common.css';\r\nimport { Api } from '../../Helper/Api';\r\nexport default function TestDetails(props) {\r\n\tconst [ testResult, setTestResult ] = useState('');\r\n\r\n\tconst Inputfocus = useRef(null);\r\n\tuseEffect(() => {\r\n\t\tInputfocus.current.focus();\r\n\t}, []);\r\n\t\r\n\t\r\n\tfunction handleTestResultChange(e) {\r\n\t\t\r\n\t\tsetTestResult(e.target.value);\r\n    }\r\n    \r\n\tconst Send = (e) => {\r\n\r\n        if(testResult.trim()==='')\r\n        {\r\n            return alert('Enter Test Result');\r\n        }\r\n\r\n\r\n\t\tvar patientData = {\r\n\t\t\t \r\n            patientid:props.userdata.patient.id,\r\n             testrecommendedby:props.userdata.doctorvisited,\r\n             testdetails:props.userdata.testdetails,\r\n             testupload:testResult,\r\n             uploadedby:props.loggedinuser.location.state.props.user.id,\r\n             testdobneby:props.loggedinuser.location.state.props.user.id,\r\n             datedone:new Date().getFullYear() +\r\n             '-' +\r\n             (parseInt(new Date().getMonth().toString()) + 1) +\r\n             '-' +\r\n             new Date().getDate(),\r\n             medicalhistoryid:props.userdata.id,\r\n             istesttaken:'TRUE'\r\n            \r\n            \r\n        };\r\n       \r\n\t\tfetch(Api + 'testresult/add',{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'content-type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(patientData)\r\n\t\t})\r\n\t\t\t.then((res) => res.text())\r\n\t\t\t.then((success) => {\r\n\t\t\t\talert('Details saved successfully!');\r\n\t\t\t\twindow.location.reload(true);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\talert('An error occured while processing your request!.');\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h3>Test Details For {props.userdata.patient.name}</h3>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tName : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.name}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tEmail Address : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.email}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tMobile Number : <label style={{ fontWeight: 'bold' }}>{props.userdata.patient.mobilenumber}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tCurrent BP: <label style={{ fontWeight: 'bold' }}>{props.userdata.bp}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tCurrent Weight: <label style={{ fontWeight: 'bold' }}>{props.userdata.weight}</label>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tComplaint : <label style={{ fontWeight: 'bold' }}>{props.userdata.complaints}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tTest Details : <label style={{ fontWeight: 'bold' }}>{props.userdata.testdetails}</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tEnter Result :{' '}\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tref={Inputfocus}\r\n\t\t\t\t\t\tvalue={testResult}\r\n\t\t\t\t\t\tonChange={handleTestResultChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<br />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn btn-success\" onClick={() => Send()}>\r\n\t\t\t\tSend To Doctor\r\n\t\t\t</button>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Popup from 'reactjs-popup';\r\nimport { Api } from '../../Helper/Api';\r\nimport Header from '../Header/header';\r\nimport TestDetails from './Testdetails';\r\nexport default function TestList(props) {\r\n\tconst [ pendingTestList, setpendingTestList ] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tconst fetchPendingTests = async () => {\r\n\t\t\tawait fetch(\r\n\t\t\t\tApi +\r\n\t\t\t\t\t'medicalhistory/getPendingTest/' +\r\n\t\t\t\t\tnew Date().getFullYear() +\r\n\t\t\t\t\t'-' +\r\n\t\t\t\t\t(parseInt(new Date().getMonth().toString()) + 1) +\r\n\t\t\t\t\t'-' +\r\n\t\t\t\t\tnew Date().getDate()\r\n\t\t\t)\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetpendingTestList(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('An error occured while fetching complaints for today');\r\n\t\t\t\t});\r\n\t\t};\r\n\t\tfetchPendingTests();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Header user={props.location.state.props.user} role={props.location.state.props.role} />\r\n\t\t\t<h3 style={{ float: 'left' }}>Manage Pending Test(s)</h3>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t{\r\n\t\t\t\t<center>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"alert alert-info\"\r\n\t\t\t\t\t\tstyle={{ visibility: pendingTestList.length < 1 ? 'visible' : 'hidden' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDear {props.location.state.props.user.name}, There are {pendingTestList.length} pending Test(s)\r\n\t\t\t\t\t\tfor today.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</center>\r\n\t\t\t}\r\n\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{ visibility: pendingTestList.length > 0 ? 'visible' : 'hidden', width: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>full Name</th>\r\n\t\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t\t<th>Email Address</th>\r\n\t\t\t\t\t\t<th>Mobile Number</th>\r\n\t\t\t\t\t\t<th>Date Visited</th>\r\n\t\t\t\t\t\t<th>Action</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{pendingTestList.length > 0 ? (\r\n\t\t\t\t\t\tpendingTestList.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={users.id}>\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.name}>{users.patient.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.address}>{users.patient.address}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.email}>{users.patient.email}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.mobilenumber}>{users.patient.mobilenumber}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.datevisited}>{users.datevisited}</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"delete\">\r\n\t\t\t\t\t\t\t\t\t\t<Popup\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger={<button className=\"btn btn-primary\"> View Details </button>}\r\n\t\t\t\t\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\t\t\t\t\tcloseOnDocumentClick\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<TestDetails userdata={users} loggedinuser={props} />\r\n\t\t\t\t\t\t\t\t\t\t</Popup>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tpendingTestList\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ReportDetails(props) {\r\n    debugger;\r\n    const {medicalDetails}=props;\r\n    return (\r\n        \r\n               medicalDetails!==null?\r\n        <center><div className=\"row\" style={{width:'100%',border:'1px solid black',borderRadius:'20px'}}>\r\n            <br/>\r\n\r\n            <div className=\"col-md-5\">\r\n            Date Visited: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.datevisited}</label>\r\n            <br/>\r\n            Complaint: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.complaints}</label>\r\n            <br/>\r\n            Test Required?: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.istestrequired}</label>\r\n            <br/>\r\n            Test Details: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.testdetails}</label>\r\n            <br/>\r\n            Test Results: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.testresult===null?\r\n            \"No Results Yet\":props.medicalDetails.testresult.testupload}</label>\r\n            <br/>\r\n            </div>\r\n\r\n            <div className=\"col-md-5\">\r\n            Test Done By: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.user===null?\r\n            \"No One has conducted test for the patient\":props.medicalDetails.user.name}</label>\r\n            <br/>\r\n            Diagnosed <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.condition===null?\r\n            \"No Diagnosis Yet\":props.medicalDetails.condition.name}</label>\r\n            <br/>\r\n            Prescription: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.prescription===''?\"No prescription Yet\"\r\n            :props.medicalDetails.prescription}</label>\r\n            <br/>\r\n            Doctor: <label style={{fontWeight:\"bold\"}}>{props.medicalDetails.user===null?\"No doctor yet\"\r\n            :props.medicalDetails.user.name}</label>\r\n            <br/>\r\n            </div>\r\n        </div></center>:<div></div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Popup from 'reactjs-popup';\r\nimport ReportDetails from './ReportDetails';\r\nexport default function ReportList(props) {\r\n\tdebugger;\r\n\t\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t\r\n\t\t\t<table\r\n\t\t\t\tclassName=\"table\"\r\n\t\t\t\tstyle={{ visibility: props.Report!==undefined && props.Report.length > 0 ? 'visible' : 'hidden', width: '100%' }}\r\n\t\t\t>\r\n\t\t\t\t<thead className=\"thead-dark\" style={{width:'100%'}}>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t<th>full Name</th>\r\n\t\t\t\t\t\t<th>Address</th>\r\n\t\t\t\t\t\t<th>Email Address</th>\r\n\t\t\t\t\t\t<th>Mobile Number</th>\r\n\t\t\t\t\t\t<th>Date Visited</th>\r\n                        <th>Disease</th>\r\n\t\t\t\t\t\t<th>View</th>\r\n\t\t\t\t\t\t<th>Delete</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{props.Report!==undefined && props.Report.length > 0 ? (\r\n\t\t\t\t\t\tprops.Report.map((users, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={users.id}>\r\n\t\t\t\t\t\t\t\t\t<td key={index}>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.name}>{users.patient.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.address}>{users.patient.address}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.email}>{users.patient.email}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.patient.mobilenumber}>{users.patient.mobilenumber}</td>\r\n\t\t\t\t\t\t\t\t\t<td key={users.datevisited}>{users.datevisited}</td>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td key={users.condition===null?\"NIL\":users.condition.name}>{users.condition===null?\r\n\t\t\t\t\t\t\t\t\t\t\"NIL\":users.condition.name}</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"view\">\r\n\t\t\t\t\t\t\t\t\t\t<Popup\r\n\t\t\t\t\t\t\t\t\t\t\ttrigger={<button className=\"btn btn-primary\"> View Details </button>}\r\n\t\t\t\t\t\t\t\t\t\t\tmodal\r\n\t\t\t\t\t\t\t\t\t\t\tcloseOnDocumentClick\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<ReportDetails medicalDetails={users}/>\r\n\t\t\t\t\t\t\t\t\t\t</Popup>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td key=\"delete\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-danger\" onClick={()=>props.handleDelete(this,users.id)}>Delete</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t)}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Api } from '../../Helper/Api';\r\nimport Header from '../Header/header';\r\nimport ReportList from '../Report/ReportList';\r\n\r\nexport default function ReportFilter(props) {\r\n\tconst fromdate = useFormDetails('');\r\n\tconst todate = useFormDetails('');\r\n\tconst [ analysisList, setAnalysis ] = useState([]);\r\n\tconst [ diseaseList, setDiseaList ] = useState([]);\r\n\tconst [ diseaseid, setDiseaseid ] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(Api + 'condition/getall')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((success) => setDiseaList(success))\r\n\t\t\t.catch((err) => {});\r\n\t}, [setDiseaList]);\r\n\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetDiseaseid(e.target.value);\r\n\t\t\r\n\t};\r\n\r\n\t\r\n\r\n\tconst handleDelete=(e,id,index)=>{\r\n\t\tif(window.confirm('Are you sure you want to delete this record?'))\r\n\t\tfetch(Api+\"medicalhistory/deleteinfo/\"+id,{\r\n\t\t\tmethod:'DELETE',\r\n\t\t\theaders:{\r\n\t\t\t\t'Content-type':'application/json'\r\n\t\t\t}\r\n\t\t}).then(response=>response.text())\r\n\t\t.then(success=>{\r\n\t\t\tif(success===\"OK\")\r\n\t\t\t{\r\n\t\t\t\t//analysisList.splice(index,1,analysisList);\r\n\t\t\t\talert('Record deleted Successfully!');\r\n\t\t\t\tfilter();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\talert('An error occured while performing your requests!')\r\n\t\t\t}\r\n\t\t}).catch(err=>{\r\n\t\t\talert('An error occured while performing your requests')\r\n\t\t})\r\n\t}\r\n\r\n\tconst filter = () => {\r\n\t\tdebugger;\r\n\t\tif (fromdate.value === '') {\r\n\t\t\treturn alert('Please Select A Start Date');\r\n\t\t}\r\n\t\tif (todate.value === '') {\r\n\t\t\treturn alert('Please Select A End Date');\r\n\t\t}\r\n\t\tconst date1 = new Date(fromdate.value);\r\n\t\tconst date2 = new Date(todate.value);\r\n\r\n\t\tif (date1 > date2) {\r\n\t\t\talert('Start date cannot be greater than End date');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar analysisValues = {\r\n\t\t\tfromdate: fromdate.value,\r\n\t\t\tenddate: todate.value\r\n\t\t};\r\n\r\n\t\tif (diseaseid > 0) {\r\n\t\t\tfetch(Api + 'medicalhistory/analysis/' + diseaseid, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(analysisValues)\r\n\t\t\t})\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetAnalysis(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => alert('An error occured while performing your request'));\r\n\t\t} else {\r\n\t\t\tfetch(Api + 'medicalhistory/analysis', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(analysisValues)\r\n\t\t\t})\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((success) => {\r\n\t\t\t\t\tsetAnalysis(success);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\talert('An error occured while performing your requests!');\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header user={props.location.state.props.user} role={props.location.state.props.role} />\r\n\t\t\t<h3 style={{ float: 'left' }}>Clinical Analysis</h3>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t\t<center>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\tStart Date<input\r\n\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\tvalue={fromdate.value}\r\n\t\t\t\t\t\t\t\t\tonChange={fromdate.onChange}\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t\t<th style={{ marginLeft: '130px' }}>\r\n\t\t\t\t\t\t\t\tEnd Date<input\r\n\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\tvalue={todate.value}\r\n\t\t\t\t\t\t\t\t\tonChange={todate.onChange}\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th />\r\n\t\t\t\t\t\t\t<th style={{ marginLeft: '130px' }}>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-success\" onClick={filter}>\r\n\t\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th />\r\n\r\n\t\t\t\t\t\t\t<th />\r\n\r\n\t\t\t\t\t\t\t<td />\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t</table>\r\n\t\t\t\t<br />\r\n\t\t\t\tFilter By Disease\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tstyle={{ width: '25%', marginLeft: '10px' }}\r\n\t\t\t\t\tvalue={diseaseid}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option>-- Select--</option>\r\n\t\t\t\t\t{diseaseList.length > 0 ? (\r\n\t\t\t\t\t\tdiseaseList.map((x) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<option value={x.id} key={x.name + x.id}>\r\n\t\t\t\t\t\t\t\t\t{x.name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t)}\r\n\t\t\t\t</select>\r\n\t\t\t</center>\r\n\t\t\t<br />\r\n\t\t\t<ReportList Report={analysisList} handleDelete={handleDelete} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction useFormDetails(initialInput) {\r\n\tconst [ value, setValue ] = useState(initialInput);\r\n\r\n\tfunction handleOnchange(e) {\r\n\t\tsetValue(e.target.value);\r\n\t}\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tonChange: handleOnchange\r\n\t};\r\n}\r\n","import React from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport Login from './components/Login/login';\nimport ForgotPassword from './components/Login/forgotpassword';\nimport './App.css';\nimport DashBoard from './components/DashBoard/Dashboard';\nimport Patient from './components/Patient/Patient';\nimport AppFooter from './components/Footer/AppFooter';\nimport Staff from './components/Staff/Staff';\nimport ManageDisease from './components/Diseases/ManageDisease';\nimport ManageDepartment from './components/Department/Department';\nimport ManageComplaints from './components/Patient/ManageComplaints';\nimport ManageTests from './components/Laboratory/TestList';\nimport ManageReports from './components/Report/ReportFilter';\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={Login} />\n\t\t\t\t\t<Route path=\"/ForgotPassword\" component={ForgotPassword} />\n\t\t\t\t\t<Route path=\"/Login\" component={Login} />\n\t\t\t\t\t<Route path=\"/DashBoard\" component={DashBoard} />\n\t\t\t\t\t<Route path=\"/ManagePatient\" component={Patient} />\n\t\t\t\t\t<Route path=\"/ManageStaff\" component={Staff} />\n\t\t\t\t\t<Route path=\"/ManageDisease\" component={ManageDisease} />\n\t\t\t\t\t<Route path=\"/managedepartment\" component={ManageDepartment} />\n\t\t\t\t\t<Route path=\"/managecomplaints\" component={ManageComplaints} />\n\t\t\t\t\t<Route path=\"/manageTests\" component={ManageTests} />\n\t\t\t\t\t<Route path=\"/managereports\" component={ManageReports} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t\t<AppFooter />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}